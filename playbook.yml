---
- hosts: localhost
  remote_user: ubuntu
  connection: local
  become: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    go_version: "1.16.4"

  tasks:
    - block:
      - name: Update apt cache
        apt:
          update_cache: true
        become: true
        changed_when: false

      - name: Upgrade system
        apt:
          upgrade: dist
        become: true

      - name: Remove unused packages
        apt:
          autoremove: true
        become: true

      - name: Clean apt cache
        apt:
          autoclean: true
        become: true
      tags: update-system

    - name: configure sudoers
      become: true
      become_user: root
      lineinfile:
        path: /etc/sudoers
        line: "{{ ansible_user_id }} ALL=(ALL) NOPASSWD:ALL"
        regexp: "^{{ ansible_user_id }}\\s+"
      tags: sudo

    - block:
      - name: Add an Apt signing key for the brave browser
        apt_key:
          url: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
          state: present
        become: true

      - name: Add specified repository into sources list for brave
        apt_repository:
          repo: deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main
          state: present
        become: true
      tags: brave

    - block:
      - name: Add an Apt signing key for vscode
        apt_key:
          url: https://packages.microsoft.com/keys/microsoft.asc
          state: present
        become: true

      - name: Add specified repository into sources list for vscode
        apt_repository:
          repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
          state: present
        become: true
      tags: vscode

    - block:
      - name: Add an Apt signing key for packer
        apt_key:
          url: https://apt.releases.hashicorp.com/gpg
          state: present
        become: true

      - name: Add specified repository into sources list for packer
        apt_repository:
          repo: deb [arch=amd64] https://apt.releases.hashicorp.com bionic main
          state: present
        become: true
      tags: packer

    - block:
      - name: Add an Apt signing key for helm
        apt_key:
          url: https://baltocdn.com/helm/signing.asc
          state: present
        become: true

      - name: Add specified repository into sources list for helm
        apt_repository:
          repo: deb https://baltocdn.com/helm/stable/debian/ all main
          state: present
        become: true
      tags: helm

    - block:
      - name: Add an Apt signing key for kubectl
        apt_key:
          url:  https://packages.cloud.google.com/apt/doc/apt-key.gpg
          keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
          state: present
        become: true

      - name: Add specified repository into sources list for helm
        apt_repository:
          repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
          state: present
        become: true
      tags: kubectl

    - block:
      - name: Add an apt key by id from the ubuntu keyserver for i3 gaps
        apt_key:
          keyserver: keyserver.ubuntu.com
          id: BDA0E4BA891B327BB00DF1E076458020C35556DC
        become: true

      - name: Add specified repository into sources list for i3-gaps
        apt_repository:
          repo:  "{{ item }}"
          state: present
        with_items:
          - deb http://ppa.launchpad.net/kgilmer/speed-ricer/ubuntu bionic main
          - deb-src http://ppa.launchpad.net/kgilmer/speed-ricer/ubuntu bionic main
        become: true
      tags: gaps

    - block:
      - name: Add an apt key by id from the ubuntu keyserver for Neovim
        apt_key:
          keyserver: keyserver.ubuntu.com
          id: 9DBB0BE9366964F134855E2255F96FCF8231B6DD
        become: true

      - name: Add specified repository into sources list for Neovim
        apt_repository:
          repo:  "{{ item }}"
          state: present
        with_items:
          - deb http://ppa.launchpad.net/neovim-ppa/stable/ubuntu bionic main
          - deb-src http://ppa.launchpad.net/neovim-ppa/stable/ubuntu bionic main
        become: true
      tags: neovim

    - block:
      - name: Add an apt key by id from the ubuntu keyserver for alacritty
        apt_key:
          keyserver: keyserver.ubuntu.com
          id: 5B7FC40A404FAD98548806028AC9B4BBBAB4900B
        become: true

      - name: Add specified repository into sources list for alacritty
        apt_repository:
          repo:  "{{ item }}"
          state: present
        with_items:
          - deb http://ppa.launchpad.net/mmstick76/alacritty/ubuntu bionic main
          - deb-src http://ppa.launchpad.net/mmstick76/alacritty/ubuntu bionic main
        become: true
      tags: alacritty

    - name: Install packages
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - feh
          - packer
          - helm
          - composer
          - compton
          - hexchat
          - apt-transport-https
          - software-properties-common
          - gnupg
          - flameshot
          - brave-browser
          - pulseaudio
          - pulseaudio-utils
          - redshift-gtk
          - code
          - vim
          - neovim
          - alacritty
          - docker
          - kubectl
          - kubectx
          - dnsutils
          - vlc
          - postgresql-client
          - tig
          - i3lock
          - i3-gaps
          - zsh
          - zsh-syntax-highlighting
          - zsh-antigen
          - gem
          - rofi
          - gnome-tweak-tool
          - breeze-cursor-theme
          - breeze-icon-theme
          - gtk3-engines-breeze
          - lxappearance
          - python3
          - python3-pip
          - python3-venv
          - virtualenv
          - pylint3
          - curl
          - wget
          - tree
          - traceroute
          - tcpdump
          - pm-utils
          - net-tools
          - network-manager-openconnect
          - network-manager-openvpn
          - network-manager
          - npm
          - manpages
          - blueman
          - cmatrix
          - x11-xserver-utils
          - arandr
          - neofetch
          - meld
          - openjdk-8-jre
          - openjfx
          - virtualbox
          - jq
          - pv
      tags: packages

    - name: install dotbot
      shell: pip3 install dotbot

    - name: Install bat for cat
      apt:
        deb: https://github.com/sharkdp/bat/releases/download/v0.18.0/bat-musl_0.18.0_amd64.deb
      become: yes

    - name: Install slack desktop
      apt:
        deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.14.0-amd64.deb
      become: yes
      tags: slack

    - block:
      - name: Check if awscli is installed
        stat:
          path: /usr/local/bin/aws
        register: aws

      - block:
        - name: Download the awscli bundle.
          get_url:
            url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            dest: /tmp/awscli-bundle.zip

        - name: Unarchive the installer.
          unarchive:
            src: /tmp/awscli-bundle.zip
            dest: /tmp
            copy: no
            creates: /tmp/aws

        - name: Install awscli package.
          shell: bash /tmp/aws/install
          become: yes
        when: not aws.stat.exists

      tags: awscli

    - block:
      - name: Check if Golang is installed
        stat:
          path: /usr/local/go
        register: golang

      - name: Download Golang
        get_url:
          url: "https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz"
          dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
          mode: '0644'
        when: not golang.stat.exists
        become: yes

      - name: Install Golang
        command: "tar -C /usr/local -xzf /tmp/go{{ go_version }}.linux-amd64.tar.gz"
        when: not golang.stat.exists
        become: yes

      - name: Add Golang to the PATH
        shell: export PATH=$PATH:/usr/local/go/bin
        when: not golang.stat.exists
        become: yes
      tags: go


    - block:
      - name: Check if .oh-my-zsh exists
        stat:
          path: ~/.oh-my-zsh
        register: stat_oh_my_zsh_result

      - name: Download oh-my-zsh installer
        get_url:
          url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
          dest: /tmp
          mode: '0747'
        when: not stat_oh_my_zsh_result.stat.exists

      - name: Check if installer exists
        stat:
          path: /tmp/install.sh
        register: stat_oh_my_zsh_installer

      - name: Execute the zsh-installer.sh
        shell: /tmp/install.sh --unattended
        when:
          - stat_oh_my_zsh_installer.stat.exists
          - not stat_oh_my_zsh_result.stat.exists
      tags: zsh

    - block:
      - name: Check if .powerlevel10k exists
        stat:
          path: ~/.oh-my-zsh/custom/themes/powerlevel10k
        register: stat_pk10_result

      - name: install powerlevel10k
        command: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k
        when: not stat_pk10_result.stat.exists
      tags: pk10

    - block:
      - name: Check if .fzf exists
        stat:
          path: ~/.fzf
        register: stat_fzf_result

      - name: Get fzf
        command: git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        when: not stat_fzf_result.stat.exists

      - name: Execute the fzf installer
        shell: ~/.fzf/install
        when: not stat_fzf_result.stat.exists
      tags: fzf

    - block:
      - name: Check if kubens/kubectx exists
        stat:
          path: /usr/local/bin/kubectx
        register: stat_result

      - name: install kubens/kubectx
        get_url:
          url: https://github.com/ahmetb/kubectx
          dest: /opt/kubectx
          mode: '755'
          force: no
        when: not stat_result.stat.exists
        become: yes

      - name: create kubectx simlink
        file:
          src: "/opt/kubectx/{{ item }}"
          dest: "/usr/local/bin/{{ item }}"
          state: link
        with_items:
          - kubens
          - kubectx
        become: yes
        when: not stat_result.stat.exists

      - name: create completions directory
        file:
          path: ~/.oh-my-zsh/completions
          state: directory
          recurse: yes
        when: not stat_result.stat.exists

      - name: create kubens completions simlink
        file:
          src: "/opt/kubectx/completion/{{ item }}"
          dest: "~/.oh-my-zsh/completions/{{ item }}"
          state: link
        with_items:
          - _kubens.zsh
          - _kubectx.zsh
        when: not stat_result.stat.exists

      tags: kubens

    - block:
      - name: Check if zsh-suggestions exists
        stat:
          path: "{{ item }}"
        with_items:
          - ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
          - ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
          - ~/.oh-my-zsh/custom/plugins/zsh-completions
          - ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        register: stat_sugg_result

      - name: install zsh-autosuggestions
        command: git clone https://github.com/zsh-users/zsh-autosuggestions.git ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
        when: not stat_sugg_result.results[0].stat.exists

      - name: install zsh-history-substring-search
        command: git clone https://github.com/zsh-users/zsh-history-substring-search.git ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
        when: not stat_sugg_result.results[1].stat.exists

      - name: install zsh-completion
        command: git clone https://github.com/zsh-users/zsh-completions.git ~/.oh-my-zsh/custom/plugins/zsh-completions
        when: not stat_sugg_result.results[2].stat.exists

      - name: install zsh-syntax-highlighting
        command: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        when: not stat_sugg_result.results[3].stat.exists
      tags: zsh-plugs

    - block:
      - name: Check if nvm exists
        stat:
          path: ~/.nvm/install.sh
        register: stat_nvm_result

      - name: Download nvm installer
        get_url:
          url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh
          dest: /tmp/nvm_install.sh
          mode: '0747'
        when: not stat_nvm_result.stat.exists

      - name: Execute the nvm_installer.sh
        shell: /tmp/nvm_install.sh
        when: not stat_nvm_result.stat.exists
      tags: nvm

    - name: run dotbot
      command: ~/.local/bin/dotbot -c install.conf.yaml

    - name: Install psutil for bumblebee status line
      command: pip install psutil
      tags: psutil

    - name: Need the light binary to control screen brightness
      copy:
        src: ./light
        dest: /usr/local/bin/light
        owner: root
        group: root
        mode: "6755"
      become: yes

    - name: COPY over the xorg.conf
      copy:
        src: ./xorg.conf
        dest: /etc/X11/xorg.conf
        owner: root
        group: root
        mode: "0644"
      become: yes

    - name: Ensures xorg.conf.d directory exists
      file:
        path: /etc/X11/xorg.conf.d
        state: directory
      become: yes

    - name: COPY over the touchpad config
      copy:
        src: touchpadx11
        dest: /etc/X11/xorg.conf.d/90-touchpad.conf
        owner: root
        group: root
        mode: "0644"
      become: yes

    - name: install vim plugins
      command: /usr/bin/nvim --headless +PlugInstall +qall
      register: vim_plugins_stdout
      check_mode: false
      changed_when: vim_plugins_stdout.stdout_lines|length != 0
      tags: vim-update

    - name: set default shell for user
      shell: chsh -s $(which zsh)
      become: yes

    - name: Restore terminal profiles
      shell: |
        dconf load /org/gnome/terminal/legacy/profiles:/:7fcf6e99-a228-4688-b1cc-982f03c07788/ < terminaltheme-dark-profile.dconf
        dconf load /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/ < terminaltheme-profile.dconf
      tags: dconf

    - block:
      - name: install docker
        include_role:
          name: ansible-role-docker
        vars:
          docker_edition: 'ce'
          docker_package: "docker-{{ docker_edition }}"
          docker_package_state: latest
          docker_service_state: started
          docker_service_enabled: true
          docker_restart_handler_state: restarted
          docker_users:
            - "{{ ansible_user_id }}"
          docker_daemon_options:
            storage-driver: "devicemapper"
            log-opts:
              max-size: "100m"
          docker_install_compose: true
          docker_compose_version: "1.29.0"
          docker_compose_path: /usr/local/bin/docker-compose
      become: yes
      tags: docker

    - block:
      - name: Configure Firefox for nebula brain level productivity :D
        include_role:
          name: ansible-firefox
        vars:
          firefox_profiles:
            default:
              extensions:
               - adblock-plus
               - wappalyzer
               - ublock-origin
               - tree-style-tab
               - i-dont-care-about-cookies
               - to-google-translate
               - translate-web-pages
              preferences:
                privacy.donottrackheader.enabled: true
                privacy.trackingprotection.enabled: true
                signon.rememberSignons: false
                datareporting.healthreport.uploadEnabled: false
                browser.aboutConfig.showWarning: false
                app.shield.optoutstudies.enabled: false
                toolkit.legacyUserProfileCustomizations.stylesheets: true
        register: create_profile

      - name: firefox - create chrome directory
        file:
          path: "{{ create_profile.profile_path }}/chrome/"
          state: directory
          mode: '0755'

      - name: firefox - configure firefox custom css
        copy:
          dest: "{{ create_profile.profile_path }}/chrome/userChrome.css"
          content: |
            #TabsToolbar {
              visibility: collapse !important;
            }
            #titlebar {
              visibility: collapse !important;
            }
            #sidebar-header {
              visibility: collapse !important;
            }
            #sidebar {
              width: 400px !important;
            }
      tags: firefox
